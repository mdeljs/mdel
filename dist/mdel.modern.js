function t(){return(t=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])}return t}).apply(this,arguments)}function e(t){return"[object Object]"===Object.prototype.toString.call(t)}function s(t,e="mdel"){throw new Error(e+":"+t)}class r{constructor(){this.observes=[]}addObserver(t){this.removeObserver(t),this.observes.push(t)}removeObserver(t){this.observes=this.observes.filter(e=>e!==t)}notifyObservers(t,e){[...this.observes].forEach(s=>s.call(t,e))}}function o(t){return function t(s){return s&&s.core&&s.core.isStore?o(s):e(s)?Object.keys(s).reduce((e,r)=>(e[r]=t(s[r]),e),{}):Array.isArray(s)?s.map(e=>t(e)):s}(i(t))}function n(t){e(t)||s("data is not a object"),t.core&&s("data cannot have core property"),t.actions&&s("data cannot have core property")}function i(t){return function(t,e){if(null==t)return{};var s,r,o={},n=Object.keys(t);for(r=0;r<n.length;r++)e.indexOf(s=n[r])>=0||(o[s]=t[s]);return o}(t,["core","actions"])}class c{constructor(){this.core={isStore:!0,setData:t=>{n(t);const e=i(this);Object.assign(this,t),this.core.__observable.notifyObservers(this,e)},convertData:()=>o(this),observe:t=>(this.core.__observable.addObserver(t),()=>this.core.__observable.removeObserver(t)),resetData:()=>{},baseActions:{},__observable:new r}}}const a="8.0.0",b=function r(o){var a;e(o)||s("initiator is not a object"),"function"!=typeof o.data&&s("initiator.data is not a function"),o.actions&&!e(o.actions)&&s("initiator.actions is not a object"),o.base&&!o.base.isModel&&s("initiator.conn is not a Model");const b=o.base||c;return o.single?function(t){let e;return function(...s){return e||(e=new t(...s))}}(r(Object.assign({},o,{single:!1}))):((a=class extends b{constructor(){super(arguments[0]||{sourceExtend:!0});const e=arguments[0],s=o.data(),r=o.actions||{};this.core.baseActions=t({},this.actions),this.core.resetData=()=>{let e={};o.base&&(e=i(new b({sourceExtend:!0}))),this.core.setData(t({},e,o.data()))},n(s),Object.assign(this,s),Object.assign(this.actions,function(t,e){const s={};return Object.keys(t).forEach(r=>{s[r]=t[r].bind(e)}),s}(r,this)),e&&e.sourceExtend||(Object.seal(this),Object.freeze(this.actions),Object.freeze(this.core))}}).isModel=!0,a)};export{b as createModel,e as isObject,s as throwError,a as version};
//# sourceMappingURL=mdel.modern.js.map
