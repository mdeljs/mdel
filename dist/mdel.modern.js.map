{"version":3,"file":"mdel.modern.js","sources":["../src/utils/helper.ts","../src/utils/observe.ts","../src/module/store.ts","../src/index.ts","../src/module/model.ts"],"sourcesContent":["/**\n * 判断是否是对象\n * @param data {*} 待检测的数据\n * @return {boolean}\n */\nexport function isObject(data: any): boolean {\n    return Object.prototype.toString.call(data) === '[object Object]';\n}\n\n/**\n * 抛出异常\n * @param message {string} 错误信息\n * @param name {string} 标识\n */\nexport function throwError(message: string, name = 'mdel'): never {\n    throw new Error(name + ':' + message)\n}\n\n/**\n * 绑定this\n * @param target {Object} 目标\n * @param thisArg {*} this值\n * @return {Object}\n */\nexport function bindThis<T extends {\n    [index: string]: (...args: any[]) => any\n}>(target: T, thisArg: any): T {\n    const result = {} as T;\n\n    Object.keys(target).forEach((key) => {\n        (result as any)[key] = target[key].bind(thisArg)\n    });\n\n    return result;\n}\n","import {Store, StoreData, StoreObserver} from \"../type\";\n\nexport class Observable {\n    observes: StoreObserver<any>[] = [];\n\n    addObserver(observer: StoreObserver<any>) {\n        this.removeObserver(observer);\n        this.observes.push(observer);\n    }\n\n    removeObserver(observer: StoreObserver<any>) {\n        this.observes = this.observes.filter(item => item !== observer);\n    }\n\n    notifyObservers(store: Store<any>, data: StoreData) {\n        const observes = [...this.observes];\n\n        observes.forEach(observer => observer.call(store, data));\n    }\n}\n","import {isObject, throwError} from \"../utils/helper\";\nimport {ConvertData, PickModelData, Store, StoreCore, StoreData} from \"../type\";\nimport {Observable} from \"../utils/observe\";\n\nfunction convertData<S extends Store<any>>(store: S): ConvertData<S> {\n  const data = getStoreData(store as any);\n\n  function findData(target: any) {\n    if (target && target.core && target.core.isStore) {\n      // @ts-ignore\n      return convertData(target);\n    } else if (isObject(target)) {\n      return Object.keys(target).reduce((previousValue, currentValue) => {\n        previousValue[currentValue] = findData(target[currentValue]);\n\n        return previousValue;\n      }, {});\n    } else if (Array.isArray(target)) {\n      return target.map(item => findData(item));\n    }\n\n    return target;\n  }\n\n  return findData(data);\n}\n\nexport function checkData(data: any) {\n    if (!isObject(data)) {\n        throwError('data is not a object');\n    }\n\n    if (data.core) {\n        throwError('data cannot have core property');\n    }\n\n    if (data.actions) {\n        throwError('data cannot have core property');\n    }\n}\n\nexport function getStoreData<D extends StoreData, S extends Store<D>>(store: S): PickModelData<D> {\n    const {core, actions, ...data} = store;\n\n    return data as PickModelData<D>;\n}\n\nexport class BaseStore implements Store<{}> {\n  core: { __observable: Observable } & StoreCore<any, any> = {\n    isStore: true,\n    setData: (data) => {\n      checkData(data);\n\n      const previousData = getStoreData(this);\n      (<any>Object).assign(this, data)\n      this.core.__observable.notifyObservers(this, previousData);\n    },\n    convertData: () => {\n      return convertData(this);\n    },\n    observe: (observer) => {\n      this.core.__observable.addObserver(observer);\n      return () => this.core.__observable.removeObserver(observer);\n    },\n    //需子类实现\n    resetData: () => {\n    },\n    //需子类实现\n    baseActions: {},\n\n    __observable: new Observable()\n  }\n  actions: {}\n}\n","import { createModel as cm } from \"./module/model\";\nimport { CreateModel } from \"./type\";\n\nexport { throwError, isObject } from './utils/helper'\nexport { Model, Store, PickModelStore, PickModelData, PickStoreData, StoreData, StoreUnobserve } from \"./type\";\n\nexport const createModel: CreateModel = cm;","import {CreateModelInitiator, Model as ModelType} from \"../type\";\nimport {bindThis, isObject, throwError} from \"../utils/helper\";\nimport {BaseStore, checkData, getStoreData} from \"./store\";\n\ninterface ModelOptions {\n  //来自继承\n  sourceExtend?: boolean\n}\n\nfunction createSingleModel<M extends ModelType<any>>(model: M): M {\n  let store;\n\n  return function SingleModel(...args) {\n    return store || (store = new (model as any)(...args));\n  } as unknown as M;\n}\n\nexport function createModel(initiator: CreateModelInitiator<any, any, any>): ModelType<any> {\n  //检查数据\n  if (!isObject(initiator)) {\n    throwError('initiator is not a object');\n  }\n  if (typeof initiator.data !== 'function') {\n    throwError('initiator.data is not a function');\n  }\n  if (initiator.actions && !isObject(initiator.actions)) {\n    throwError('initiator.actions is not a object');\n  }\n  if (initiator.base && !initiator.base.isModel) {\n    throwError('initiator.conn is not a Model');\n  }\n\n  const Base: { new(options?: ModelOptions): BaseStore } = (initiator.base || BaseStore);\n\n  if (initiator.single) {\n    const params = Object.assign({}, initiator, {\n      single: false\n    });\n\n    return createSingleModel(createModel(params));\n  }\n\n  return class Model extends Base {\n    static isModel = true;\n\n    constructor() {\n      super(arguments[0] || {sourceExtend: true});\n\n      const options: ModelOptions = arguments[0];\n      const currentData = initiator.data();\n      const currentActions = initiator.actions || {};\n\n      this.core.baseActions = {...this.actions};\n      this.core.resetData = () => {\n        let baseData = {};\n\n        if (initiator.base) {\n          // @ts-ignore\n          baseData = getStoreData(new Base({\n            sourceExtend: true\n          }));\n        }\n\n        this.core.setData({\n          ...baseData,\n          ...initiator.data()\n        })\n      }\n\n      checkData(currentData);\n      (<any>Object).assign(this, currentData);\n      Object.assign(this.actions, bindThis(currentActions, this));\n\n      if (!(options && options.sourceExtend)) {\n        (<any>Object).seal(this);\n        Object.freeze(this.actions);\n        Object.freeze(this.core);\n      }\n    }\n    }\n}\n"],"names":["isObject","data","Object","prototype","toString","call","throwError","message","name","Error","Observable","constructor","this","addObserver","observer","removeObserver","observes","push","filter","item","notifyObservers","store","forEach","convertData","findData","target","core","isStore","keys","reduce","previousValue","currentValue","Array","isArray","map","getStoreData","checkData","actions","BaseStore","setData","previousData","assign","__observable","observe","resetData","baseActions","createModel","initiator","base","isModel","Base","single","model","args","createSingleModel","super","arguments","sourceExtend","options","currentData","currentActions","baseData","thisArg","result","key","bind","bindThis","seal","freeze"],"mappings":"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"}